#!/usr/bin/env bash

set -e

command=$(basename $0)
source $(dirname $0)/../../etc/profile

domain=
name=
content=
record_id=
ttl=3600
type=A
proxied=false
yes=false

help_usage() {
  echo "$PROGRAM $command [-h] -d <domain> -r <record_id> -n <name> -c <content> [-t <type>] [-l <ttl>] [-p] [-y]"
}

help_where() {
  echo "-c      DNS content; e.g. IP address or alias"
  echo "-d      domain name"
  echo "-n      DNS host(without the domain)"
  echo "-l      DNS record TTL; default $ttl"
  echo "-p      enable DNS proxy"
  echo "-r      record ID"
  echo "-t      DNS record type; default $type"
  echo "-y      do not prompt for confirmation"
  echo "-h      print this message"
}

help_description() {
  echo "Update DNS entry record."
}

while getopts ":c:d:l:n:pr:t:yh" opt ; do
  case $opt in
    c)
      content=$OPTARG
      ;;
    d)
      domain=$OPTARG
      ;;
    l)
      ttl=$OPTARG
      ;;
    n)
      name=$OPTARG
      ;;
    p)
      proxied=true
      ;;
    r)
      record=$OPTARG
      ;;
    t)
      type=$OPTARG
      ;;
    y)
      yes=true
      ;;
    h)
      help
      exit
      ;;
    \?)
      echo "invalid option -$OPTARG" 2>&1
      echo "run with -h for help" 2>&1
      exit 1
      ;;
    :)
      echo "option -$OPTARG requires an argument" 2>&1
      echo "run with -h for help" 2>&1
      exit 1
      ;;
  esac
done
shift $(($OPTIND-1))

if [[ $# -gt 0 ]]; then
  die "too many args; run with -h for help"
fi

if [[ -z $domain ]]; then
  die "domain not specified; run with -h for help"
fi

if [[ -z $record ]]; then
  die "record not specified; run with -h for help"
fi

if [[ -z $name ]]; then
  die "name not specified; run with -h for help"
fi

if [[ -z $content ]]; then
  die "content not specified; run with -h for help"
fi

if ! $yes ; then
  format="%-10s : %s\n"
  printf "$format" "domain" "$domain"
  printf "$format" "record" "$record"
  printf "$format" "name" "$name"
  printf "$format" "content" "$content"
  printf "$format" "type" "$type"
  printf "$format" "TTL" "$ttl"
  printf "$format" "proxied" "$proxied"
  echo -en "\nproceed [y/N]? "
  read answer
  if [[ ! $answer = "y" ]]; then
    exit
  fi
fi

zone=$($COMMAND_DIR/zone -d $domain)

$COMMAND_DIR/api -m PUT -e "zones/${zone}/dns_records/${record}" -d '{"name":"'$name'","content":"'$content'","type":"'$type'","TTL":'$ttl',"proxied":'$proxied'}' | jq .
